variables:
    WIN32_IMAGE: registry.gitlab.com/rpdev/opentodolist:win32
    WIN64_IMAGE: registry.gitlab.com/rpdev/opentodolist:win64
    UBUNTU_IMAGE: registry.gitlab.com/rpdev/opentodolist:ubuntu
    ANDROID_IMAGE: registry.gitlab.com/rpdev/opentodolist:android
    FLATPAK_IMAGE: registry.gitlab.com/rpdev/opentodolist:flatpak
    NEXTCLOUD_IMAGE: nextcloud
    OWNCLOUD_IMAGE: owncloud
    CTEST_OUTPUT_ON_FAILURE: 1
    GIT_SUBMODULE_STRATEGY: recursive
    CCACHE_DIR: $CI_PROJECT_DIR/ccache



stages:
  - images
  - build
  - test
  - installer
  - deploy


cache:
    paths:
        - $CCACHE_DIR
    key: $CI_JOB_NAME


################################################################################
# Images Stage
################################################################################

# Build the Linux (Ubuntu) Image
image::appimage:
  stage: images
  image: docker:git
  services:
  - docker:dind
  script:
    - cd ci/docker/ubuntu
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build --pull -t $UBUNTU_IMAGE .
    - docker push $UBUNTU_IMAGE
  when: manual


# Build the Win32 Image
image::win32:
  stage: images
  image: fedora
  script:
    - dnf install -y --nogpgcheck podman buildah
    - cd ci/docker/win32
    - podman login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - buildah bud -t $WIN32_IMAGE .
    - buildah push $WIN32_IMAGE docker://$WIN32_IMAGE
  when: manual


# Build the Win64 Image
image::win64:
  stage: images
  image: fedora
  script:
    - dnf install -y --nogpgcheck podman buildah
    - cd ci/docker/win64
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - buildah bud -t $WIN64_IMAGE .
    - buildah push $WIN64_IMAGE docker://$WIN64_IMAGE
  when: manual


# Build the Android Image
image::android_base:
  stage: images
  image: docker:git
  services:
  - docker:dind
  script:
    - cd ci/docker/android
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build --pull -t $ANDROID_IMAGE .
    - docker push $ANDROID_IMAGE
  when: manual

# Build the Flatpak Image
image::flatpak:
  stage: images
  image: docker:git
  services:
  - docker:dind
  script:
    - cd ci/docker/flatpak
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build --pull -t $FLATPAK_IMAGE .
    - docker push $FLATPAK_IMAGE
  when: manual


################################################################################
# Build Stage
################################################################################


# Run cppcheck static code checker:
cppcheck:
  stage: build
  image: fedora
  script:
    - ci/cppcheck.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i


# Run clang-format code formatter check:
clang-format:
  stage: build
  image: fedora:32 # Force to F32 for now - required to get clang-format passing
  script:
    - ci/clang-format.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i


# Run cpplint static code checker:
cpplint:
  stage: build
  image: fedora
  script:
    - ci/cpplint.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i


# Create source archives of the app
export-sources:
  stage: build
  image: fedora
  script:
    - ci/export-sources.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  artifacts:
    paths:
      - OpenTodoList-Source-*.zip
      - OpenTodoList-Source-*.tar.gz
    expire_in: 1 week


# Ubuntu build including AppImage
appimage:
  stage: build
  image: $UBUNTU_IMAGE
  services:
    - name: $NEXTCLOUD_IMAGE
      alias: nextcloud
    - name: $OWNCLOUD_IMAGE
      alias: owncloud
  script:
    - ci/ubuntu-build.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  artifacts:
    paths:
      - build-ubuntu/OpenTodoList-*-x86_64.AppImage*
    expire_in: 1 week


# Job template to build on Fedora
.fedora:
  stage: build
  image: fedora
  services:
    - name: $NEXTCLOUD_IMAGE
      alias: nextcloud
    - name: $OWNCLOUD_IMAGE
      alias: owncloud
  script:
    ./ci/fedora-build.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  variables:
    BUILD_SYSTEM: qmake

# Build on Fedora using qmake
fedora-qmake:
  extends: .fedora
  variables:
    BUILD_SYSTEM: qmake

# Build on Fedora using cmake
fedora-cmake:
  extends: .fedora
  variables:
    BUILD_SYSTEM: cmake

# Build on Fedora using cmake and libraries from repositories
fedora-cmake-system-libs:
  extends: .fedora
  variables:
    BUILD_SYSTEM: cmake
    SYSTEM_LIBS: "1"

# Windows 32bit build
win32:
  stage: build
  image: $WIN32_IMAGE
  script:
    - ./ci/win32-build.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  artifacts:
    paths:
      - deploy-win32/OpenTodoList-*-Windows-32bit.exe
    expire_in: 1 week


# Windows 64bit build
win64:
  stage: build
  image: $WIN64_IMAGE
  script:
    - ./ci/win64-build.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  artifacts:
    paths:
      - deploy-win64/OpenTodoList-*-Windows-64bit.exe
    expire_in: 1 week


# macOS build:
macos:
  stage: build
  tags:
    - macos
  script:
    - ci/macos-build.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  artifacts:
    paths:
      - build-macos/app/OpenTodoList.dmg
    expire_in: 1 week
  variables:
    QT_VERSION: "5.15.2"
    OSX_DEPLOYMENT_TARGET: "10.13" # Should be set to match Qt's minimum


# iOS build:
ios:
  stage: build
  tags:
    - macos
  script:
    - ci/ios-build.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  artifacts:
    paths:
      - build-ios/app/build/OpenTodoList.ipa
    expire_in: 1 week


# Android AAB + APKs
android-cmake:
  stage: build
  image: $ANDROID_IMAGE
  script:
    - ci/android-cmake-build.sh
    - mv build-android build-android-cmake
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  artifacts:
    paths:
      - build-android-cmake/OpenTodoList-*.aab
      - build-android-cmake/OpenTodoList-*.apk
    expire_in: 1 week
  variables:
    ANDROID_NDK_PLATFORM: android-21

# Android build ARMv7
android_armv7:
  stage: build
  image: $ANDROID_IMAGE
  script:
    - ci/android-build.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  artifacts:
    paths:
      - build-android/OpenTodoList-Android-armeabi-v7a.apk
    expire_in: 1 week
  variables:
    ANDROID_ABIS: armeabi-v7a
    ANDROID_NDK_PLATFORM: android-21


# Android build ARM64
android_arm64_v8a:
  stage: build
  image: $ANDROID_IMAGE
  script:
    - ci/android-build.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  artifacts:
    paths:
      - build-android/OpenTodoList-Android-arm64-v8a.apk
    expire_in: 1 week
  variables:
    ANDROID_ABIS: arm64-v8a
    ANDROID_NDK_PLATFORM: android-21


# Android build x86
android_x86:
  stage: build
  image: $ANDROID_IMAGE
  script:
    - ci/android-build.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  artifacts:
    paths:
      - build-android/OpenTodoList-Android-x86.apk
    expire_in: 1 week
  variables:
    ANDROID_ABIS: x86
    ANDROID_NDK_PLATFORM: android-21


# Android build x86_64
android_x64:
  stage: build
  image: $ANDROID_IMAGE
  script:
    - ci/android-build.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  artifacts:
    paths:
      - build-android/OpenTodoList-Android-x86_64.apk
    expire_in: 1 week
  variables:
    ANDROID_ABIS: x86_64
    ANDROID_NDK_PLATFORM: android-21

# Android AAB
android_aab:
  stage: build
  image: $ANDROID_IMAGE
  script:
    - ci/android-build.sh
  except:
    variables:
        - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
  artifacts:
    paths:
      - build-android/OpenTodoList.aab
    expire_in: 1 week
  variables:
    ANDROID_ABIS: "armeabi-v7a arm64-v8a x86 x86_64"
    ANDROID_NDK_PLATFORM: android-21

# Build the app as Flatpak
flatpak:
    stage: build
    image: $FLATPAK_IMAGE
    script:
        - ci/flatpak-build.sh
    except:
      variables:
          - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
    artifacts:
      paths:
        - fp-repo
      expire_in: 1 week
    cache:
        paths:
            - .flatpak-builder/ccache/
        key: $CI_JOB_NAME

# Build the app for Arch Linux using pkgbuild
archlinux-pkgbuild:
    stage: build
    image: archlinux
    script:
        - ci/archlinux-pkgbuild.sh
    except:
      variables:
          - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
    artifacts:
      paths:
        - build-arch/opentodolist-*.pkg.tar.zst
        - build-arch/.SRCINFO
      expire_in: 1 week
      when: always
    # Allow failure, Arch is very bleeding edge, so this should not prevent a release
    allow_failure: true


################################################################################
# Installer Stage
################################################################################

sign_apks:
    stage: installer
    tags:
        - OpenTodoListPrivate
    image: $ANDROID_IMAGE
    script:
        - ci/sign-apks.sh
    except:
      variables:
          - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
    artifacts:
      paths:
        - build-android/*-aligned.apk
        - build-android/*-aligned.aab
      expire_in: 1 week
    dependencies:
        # - android
        - android_aab
        - android_arm64_v8a
        - android_armv7
        - android_x64
        - android_x86

aur_release_check:
    stage: installer
    image: fedora
    script:
        - ci/update-aur.sh
    dependencies:
        - archlinux-pkgbuild
    except:
      variables:
          - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i

################################################################################
# Deploy Stage
################################################################################


github:
    stage: deploy
    image: fedora
    script:
        - yum install -y --nogpgcheck python3 python3-requests
        - mkdir uploads
        - cp build-ubuntu/OpenTodoList-*-x86_64.AppImage uploads
        - cp deploy-win32/OpenTodoList-*-Windows-32bit.exe uploads
        - cp deploy-win64/OpenTodoList-*-Windows-64bit.exe uploads
        - cp build-android/*-aligned.apk uploads
        - cp build-macos/app/OpenTodoList.dmg uploads
        - cp OpenTodoList-Source-*.zip uploads
        - cp OpenTodoList-Source-*.tar.gz uploads
        - ./ci/github-upload.py mhoeher opentodolist $CI_COMMIT_REF_NAME $GITHUB_ACCESS_TOKEN ./uploads/*
    except:
      variables:
          - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
    when: manual
    only:
        - tags


appstore:
    stage: deploy
    tags:
        - macos
    when: manual
    script:
        - xcrun altool --upload-app --type ios --file build-ios/app/build/OpenTodoList.ipa -u "$APPSTORE_USER" -p "$APPSTORE_PASSWORD"
    except:
      variables:
          - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
    dependencies:
      - ios

aur_release:
    stage: deploy
    image: fedora
    variables:
        RELEASE_TO_AUR: 1
    script:
        - ci/update-aur.sh
    dependencies:
        - archlinux-pkgbuild
    except:
      variables:
          - $CI_COMMIT_MESSAGE =~ /Update [^ ]+ \(POEditor.com\)/i
    when: manual
